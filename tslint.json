{
  "defaultSeverity": "warn",
  // See https://github.com/palantir/tslint/blob/master/src/configs/recommended.ts
  // "extends": ["tslint:recommended"], NOPE
  "jsRules": {},
  "rules": {
    "no-bitwise": true,
    "no-conditional-assignment": true,
    "no-debugger": true,
    "no-duplicate-variable": true,
    "no-duplicate-switch-case": true,
    "no-duplicate-super": true,
    "no-eval": true,
    "no-floating-promises": true,
    "no-for-in-array": true,
    // "no-implicit-dependencies" NOPE
    "no-import-side-effect": true,
    // "no-inferred-empty-object-type": NOPE, no value 
    // "no-invalid-this": NOPE, never catches actual errors and grumps at mocha specs.
    "no-misused-new": true,
    "no-shadowed-variable": true,
    "no-sparse-arrays": true,
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    // "no-this-assignment": NOPE, if I assign this, I mean to.
    // "no-unbound-method": NOPE
    "no-unnecessary-class": true,
    "no-unnecessary-initializer": true,
    "no-unsafe-finally": true,
    "no-unused-expression": true,
    // "no-unused-variable": NOPE, tsc does a better job.
    "no-var-keyword": true,
    "prefer-conditional-expression": true,
    "prefer-const": true,
    "strict-boolean-expressions": true,
    "triple-equals": { "options": ["allow-null-check"] },
    "deprecation": true,
    "prefer-readonly": true
  },
  "rulesDirectory": []
}
